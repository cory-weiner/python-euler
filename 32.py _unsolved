def solution(bounds):
    results = []
    for i in range(1,bounds):
        max_y = int(9999/i)
        min_y = (1000)
        for val in range(min_y,max_y):
            digit_string = str(i) + str(val) + str(i*val)
            if len(digit_string)==9 and is_pandigital(digit_string):
                results.append((i,val,i*val))


def is_pandigital(n):
    digits = [int(i) for i in str(n)]
    for i in range(1,len(digits)+1):
        if i not in digits:
            return False
    return True

# def printAllKLengthRec(set, prefix, n, k): 
#     if (k == 0) : 
#         print(prefix) 
#         return
#     for i in range(n):  
#         newPrefix = prefix + set[i] 
#         printAllKLengthRec(set, newPrefix, n, k - 1) 


# set = ['1','2','3','4','5','6','7','8','9']
# n = len(set)
# printAllKLengthRec(set, "", n, 3) 


# print(solution(1000))

# set = {'1','2','3','4','5','6','7','8','9'}

# get_permutes_of_size(['1','2','3','4'],2)